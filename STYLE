Max line width: 115 characters.



Stuff that is not lexical variables
===================================

  *hello*
    Dynamic variables.


  -hello-
    Global variables.


  =hello=
    Symbol macros.


  +hello+
    Constant values (ALEXANDRIA:DEFINE-CONSTANT).



Other unusual looking stuff
===========================

TODO: Move SW-MVC specific stuff to SW-MVC (README?).

Some of these are defined in SW-MVC and SW-STM.


  #~42
    Creates a SW-MVC:CELL with a value 42 in it.


  ~something
    Is short for (DEREF something). It is used for many things:

      * Extracting the value of a SW-MVC:CELL or SW-MVC:FORMULA.
      * Extracting or evaling a AMX:LAZY-VALUE.
      * Extracting the value of a AMX:ATOMT.
      * Extracting the value of a SW-STM:REF.
        ....etc.


  #λ(..)
    Creates a SW-MVC:CELL with a SW-MVC:FORMULA in it. One could
    also say #~λ(..) and it'd mean and do the same thing.


  λ
    Creates a SW-MVC:FORMULA.


  #l(+ 40 2)
    Creates a AMX:LAZY-VALUE with a closure in it that will yield 42 when
    extracted by the ~ read macro.


  ¤
    This is used in combination with WITH-OBJECT, like this:

      (defclass person () ((first-name) (last-name)))
      (with-object person (format t "~A ~A~%" ¤first-name ¤last-name))

    ..look at the macroexpansion of the WITH-OBJECT form to see what it does.


  ↑
    This is short for (WITH-OBJECT (SELF) ..) and is commonly used inside
    DEFCLASS forms.



Strings and quoting
===================

The default quoting character when dealing with strings should be " or
QUOTATION_MARK. This is particularly important when generating JS code which
might have parts that we'd like to be evaluated client-side.
